#Continuous Delivery Pipeline Template


steps:
# Replace CLOUDSDK_COMPUTE_ZONE and CLOUDSDK_CONTAINER_CLUSTER with your 
# zone and Anthos Cluster name. 
- name: 'gcr.io/cloud-builders/kubectl'
  id: Deploy
  args:
  - 'apply'
  - '-f'
  - 'kubernetes.yaml'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=asia-southeast1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=anthos-cluster'

# This step copies the kubernetes.yaml manifest to production branch
# The COMMIT_SHA variable below is automatically
# replaced by Cloud Build.
- name: 'gcr.io/cloud-builders/git'
  id: Copy manifest to production branch
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    set -x && \
    # Configure Git to create commits with Cloud Build's Service Account
    git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)') && \
    # Switch to the production branch and copy the manifest kubernetes.yaml file from the staging branch
    git fetch origin production && git checkout production && \
    git checkout $COMMIT_SHA kubernetes.yaml && \
    # Commit the kubernetes.yaml file to production branch
    git commit -m "Manifest from staging commited to $COMMIT_SHA
    $(git log --format=%B -n 1 $COMMIT_SHA)" && \
    # Push the changes to production branch 
    git push origin production

